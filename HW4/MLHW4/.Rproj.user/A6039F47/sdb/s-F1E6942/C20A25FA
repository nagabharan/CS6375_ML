{
    "contents" : "starttime <- Sys.time()\n\n# Import the library\nif (!require(\"RTextTools\")) \n{\n    install.packages(\"RTextTools\", repos=\"http://cran.rstudio.com/\") \n\tlibrary(\"RTextTools\")\n}\n\nif (!require(\"SparseM\")) \n{\n    install.packages(\"SparseM\", repos=\"http://cran.rstudio.com/\") \n\tlibrary(\"SparseM\")\n}\n\n# Read the training and test dataset from 5 different classes and combine them\ntraindata<-read_data(\"traindataset/\",type = \"folder\", index = \"trainlabels.csv\", warn=F)\ntestdata<-read_data(\"testdataset/\",type = \"folder\", index = \"testlabels.csv\", warn=F)\ncombined <- rbind(traindata,testdata)\n\n# Create a DTM and a container\ndoc_matrix <- create_matrix(combined$Text.Data, language=\"english\", removeNumbers=TRUE, stemWords=TRUE, removePunctuation = TRUE, removeSparseTerms=.998)\ncontainer <- create_container(doc_matrix, combined$Labels,trainSize = 1:2966,testSize = 2967:4941, virgin=FALSE)\n\n# Create Models\nSVM <- train_model(container,\"SVM\")\nGLMNET <- train_model(container,\"GLMNET\")\nMAXENT <- train_model(container,\"MAXENT\")\nBOOSTING <- train_model(container,\"BOOSTING\")\n# BAGGING <- train_model(container,\"BAGGING\")\n# RF <- train_model(container,\"RF\")\n# SLDA <- train_model(container,\"SLDA\")\nTREE <- train_model(container,\"TREE\")\n# NNET <- train_model(container,\"NNET\")\n\n# Run the classifiers\nSVM_CLASSIFY <- classify_model(container, SVM)\nGLMNET_CLASSIFY <- classify_model(container, GLMNET)\nMAXENT_CLASSIFY <- classify_model(container, MAXENT)\nBOOSTING_CLASSIFY <- classify_model(container, BOOSTING)\n# BAGGING_CLASSIFY <- classify_model(container, BAGGING)\n# RF_CLASSIFY <- classify_model(container, RF)\n# SLDA_CLASSIFY <- classify_model(container, SLDA)\nTREE_CLASSIFY <- classify_model(container, TREE)\n# NNET_CLASSIFY <- classify_model(container, NNET)\n\n# Generate Analytics\nanalytics <- create_analytics(container, cbind(SVM_CLASSIFY,GLMNET_CLASSIFY,MAXENT_CLASSIFY,TREE_CLASSIFY,BOOSTING_CLASSIFY))\n\n# Printing Analytics\nsummary(analytics)\n\nendtime <- Sys.time()\n\n# Printing runtime\nprint(endtime-starttime)",
    "created" : 1458757201287.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3322565610",
    "id" : "C20A25FA",
    "lastKnownWriteTime" : 1458759806,
    "path" : "C:/Users/nagabharan/Desktop/Spring 16/ML/HW/MLHW4/HW.R",
    "project_path" : "HW.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}